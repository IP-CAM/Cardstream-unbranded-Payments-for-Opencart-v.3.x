<div class="content" id="payment">
    <h4>{{ text_credit_card }}</h4>

    <form action="$action" method="post" id="cardstram_payment_form" style="background:transparent; min-width: 275px; max-width: 300px;">
        <div class="form-group">
            <label for="cardNumber">{{ cc_card_number }} <span class="text-danger">*</span></label>
            <input type="text" class="form-control" id="cardNumber" name="cardNumber" autocomplete="off">
        </div>
        <div class="form-group" style="display: flex; justify-content: space-between;">
            <div class="form-group" style="width: 40%">
                <label for="cardExpiryDate">{{ cc_card_expiry_date }} <span class="text-danger">*</span></label>
                <input class="form-control" type="text" id="cardExpiryDate"  name="cardExpiryDate" autocomplete="off" placeholder="MM / YY">
            </div>
            <div class="form-group" style="width: 50%">
                <label for="cardCVV">{{ cc_card_cvv }} (CVC) <span class="text-danger">*</span></label>
                <input class="form-control" type="text" id="cardCVV" name="cardCVV" autocomplete="off" placeholder="CVC">
            </div>
        </div>
    </form>
    <div>
        <input type="button" disabled value="{{ button_confirm }}" id="button-confirm" class="btn btn-primary pull-right" />
    </div>
</div>

<script type="text/javascript">
    function validate() {
        const form = document.getElementById('cardstram_payment_form');
        const validators = {
            cardNumber: {
                error: 'Must be a numeric 13-19 digit number',
                validate: v => v.match(/^(?:\d{4} ?){3} ?\d{1,4}(?: ?\d{0,3})?$/)
            },
            cardExpiryDate: {
                error: () => {
                    return 'Must be a valid numeric month and 2-digit year (' + new Date().getFullYear() + ' and above)';
                },
                validate: v => v.match(/(?:0[1-9]|1[0-2]) \/ [0-9]{2}/gm)
            },
            cardCVV: {
                error: 'Must be a valid 3 or 4 digit number',
                validate: v => v.match(/^\d{3,4}/)
            }
        };

        const fields = [].slice.call(form.getElementsByTagName('input'));

        let errors = [];
        for (let i = 0; i < fields.length; i++) {
            const field = fields[i];
            if (validators.hasOwnProperty(field.name)) {
                if (field.name === 'cardExpiryDate') {
                    const isMonthEntered = /^\d\d$/.exec(field.value);
                    if (isMonthEntered) {
                        field.value = field.value + " / ";
                    }
                }

                const validation = validators[field.name];
                const isFieldValid = field.value.length > 0 ? validation.validate(field.value): true;
                const error = (typeof(validation.error) == 'function' ? validation.error() : validation.error);

                errors.push({
                    isValid: isFieldValid !== null,
                    isEmpty: field.value.length === 0,
                    error,
                    id: field.getAttribute('id')
                });
            }
        }

        return errors;
    }

    document.getElementById('cardstram_payment_form').addEventListener('keyup', function (event) {
        if (event.target.nodeName === 'INPUT') {
            const validateData = validate();

            // validate fields
            validateData.forEach((item) => {
                let element = document.getElementById(item.id);
                if (!item.isValid) {
                    element.style.border = '1px solid red';
                } else {
                    element.style.removeProperty('border');
                }
            });

            // disable take payment button
            document.getElementById('button-confirm').disabled = validateData.some((item) => !item.isValid || item.isEmpty);
        }
    });

    $('#button-confirm').bind('click', function() {

        const match = /(?<month>(?:0[1-9]|1[0-2])) \/ (?<year>[0-9]{2})/m.exec(document.getElementById('cardExpiryDate').value);

        let spreadElements = {
            step: 2,
            cardNumber: document.getElementById('cardNumber').value,
            cardExpiryMonth: match.groups.month,
            cardExpiryYear: match.groups.year,
            cardCVV: document.getElementById('cardCVV').value,
            threeDSRedirectURL: '{{ redirect_url }}',
        };

        {% if threeDSOptions is defined %}
        spreadElements.threeDSOptions = {
            browserScreenWidth: (window && window.screen ? window.screen.width : '0'),
            browserScreenHeight: (window && window.screen ? window.screen.height : '0'),
            browserScreenColorDepth: (window && window.screen ? window.screen.colorDepth : '0'),
            browserUserAgent: (window && window.navigator ? window.navigator.userAgent : ''),
            browserLanguage: (window && window.navigator ? (window.navigator.language ? window.navigator.language : window.navigator.browserLanguage) : ''),
            browserTimeZone: (new Date()).getTimezoneOffset(),
            browserJavaScriptEnabled:  true,
            browserIPAddress: '{{ threeDSOptions.browserIPAddress }}',
            browserAcceptHeader: '{{ threeDSOptions.browserAcceptHeader }}',
        }
        {% endif %}

        {% if threeDSVersion is defined %}
        spreadElements.threeDSVersion = '{{ threeDSVersion }}'
        {% endif %}

        {% if threeDSXref is defined %}
        spreadElements.threeDSXref = '{{ threeDSXref }}'
        {% endif %}

        $.ajax({
            url: '{{ process_url }}',
            type: 'post',
            data: {...spreadElements},
            dataType: "json",
            beforeSend: function() {
                $('#button-confirm').attr('disabled', true);
                $('#payment').before('<div class="attention"> {{ text_wait }}</div>');
            },
            complete: function() {
                $('#button-confirm').attr('disabled', false);
                $('.attention').remove();
            },
            success: function(json) {
                if (json['threeDSRequest']) {
                    $('#3dauth').remove();
                    var html = null;
                    if(json['threeDSVersion']) {

                        html = `
<p>Your transaction requires 3D Secure Authentication</p>
<form name="form" action="${json['threeDSURL']}" method="post" id="3dauth">
<input type="hidden" name="threeDSRef" value="${json['threeDSRef']}" />`;

                        Object.keys(json['threeDSRequest']).forEach(function(key) {
                            html += `<input type="hidden" name="${key}" value="${json['threeDSRequest'][key]}" />`;
                        });

                        html += '<input type="submit" value="Continue"></form>';

                    } else {

                        html  = `
<p>Your transaction requires 3D Secure Authentication</p>
<form action="${json['threeDSURL']}" method="post" id="3dauth">
<input type="hidden" name="MD" value="${json['threeDSRequest']['MD']}" />
<input type="hidden" name="PaReq" value="${json['threeDSRequest']['PaReq']}" />
<input type="hidden" name="TermUrl" value="${json['threeDSRequest']['TermUrl']}&step=3&xref=${json['xref']}" />
<input type="submit" value="Continue">
</form>`;
                    }

                    $('#payment').html(html);
                    $('#3dauth').submit();
                }

                if (json['error']) {
                    alert(json['error']);
                }

                if (json['success']) {
                    location = json['success'];
                }

            }
        });
    });
</script>
